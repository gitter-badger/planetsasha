Index: src/ossimPlanet/ossimPlanetKmlPlacemarkNode.cpp
===================================================================
--- src/ossimPlanet/ossimPlanetKmlPlacemarkNode.cpp	(revision 22367)
+++ src/ossimPlanet/ossimPlanetKmlPlacemarkNode.cpp	(working copy)
@@ -226,7 +226,7 @@
    std::vector<osg::ref_ptr<ossimPlanetKmlGeometry> > primitiveGeomList;
    theKmlGeometries = new osg::Group;
    theKmlPickableGeometries = new osg::Group;
-
+   
    // load placemark feature
    osg::ref_ptr<ossimPlanetKmlGeometry> geom = placemark->getGeometry();
    if(geom.valid())
@@ -610,6 +610,7 @@
          const ossimPlanetKmlPolygon::InnerBoundaryList& innerRings = geom->toPolygon()->innerBoundaryList();
          extrudeFlag = geom->toPolygon()->extrudeFlag();
          ossim_uint32 startGroupIdx = 0;
+         
          if(linearRing)
          {
             const ossimPlanetKmlGeometry::PointListType& pointList = linearRing->pointList();
@@ -683,10 +684,12 @@
          if(!needsReTessFlag)
          {
             if(normalStyle->polyStyle().get())
-            {
+            { 
                const osg::ref_ptr<ossimPlanetKmlPolyStyle> polyStyle = normalStyle->polyStyle();
                if(polyStyle.valid())
                {
+                polyStyle->theColor = placemark->thePColor;
+                polyStyle->clearFields();
                   if(polyStyle->getFillFlag())
                   {
                      needsReTessFlag = true;
Index: src/ossimPlanet/ossimPlanetKml.cpp
===================================================================
--- src/ossimPlanet/ossimPlanetKml.cpp	(revision 22367)
+++ src/ossimPlanet/ossimPlanetKml.cpp	(working copy)
@@ -2191,6 +2191,28 @@
       const vector<ossimRefPtr<ossimXmlNode> >& childNodes = xmlNode->getChildNodes();
       for(idx = 0; (idx < childNodes.size())&&(foundCount < 1); ++idx)
       {
+        std::string tag = childNodes[idx]->getTag();
+        if(tag == "description")
+        {
+            theDescription = childNodes[idx]->getText();
+            
+            /*
+            theCDataDescriptionFlag = childNodes[idx]->cdataFlag();
+            ossimRefPtr<ossimXmlNode> node2 = new ossimXmlNode;
+            std::istringstream in(theDescription);
+            if(node2->read(in))
+            {
+            }
+            */
+              
+            if(theDescription.contains("<color>"))
+            {
+                ossimString temp = theDescription.after("<color>");
+                std::string color = temp.before("</color>");
+                //std::cout << "T:" << color << "\n";
+                this->setColor(color);
+            }
+          }
          theGeometry = (ossimPlanetKmlGeometry*)ossimPlanetKmlObjectRegistry::instance()->newGeometry(childNodes[idx]->getTag());
          if(theGeometry.valid())
          {
Index: include/ossimPlanet/ossimPlanetKml.h
===================================================================
--- include/ossimPlanet/ossimPlanetKml.h	(revision 22367)
+++ include/ossimPlanet/ossimPlanetKml.h	(working copy)
@@ -2425,6 +2425,14 @@
       }      
       return result;
    }
+
+ void setColor(std::string color)
+ {
+    thePColor = color;    
+ }
+   
+ std::string thePColor;
+
  
 protected:
    osg::ref_ptr<ossimPlanetKmlGeometry> theGeometry;
